
PACT / Contract testing overview:

contract testing are used to defined the interaction between consumer and provider API. 
Both party must meet the requirements set out in the contract. 

Benefits of PACT/Contract testing:

- reliable
- fast
- relieve issues with version control. 
When you have changes to request model or response model. With contract testing you can always go back and verify with the current working version.

Framework Comparison:
 
@pact/foundation/pact

Implementation guide:

Step 1: Install the required npm packages. Use the command below

npm i @pact-foundation/pact@latest
npm i mocha@latest

Step 2: Create the Consumer Test 
    - Mock the provider using Pact
    - Create an interaction
        - setup expected Request
        - setup expected Response
    - Send request to the mock provider
    - verify Request
    - Generate contract

Step 3: Setup Provider Test 
    - 


Example:

Password reset test:
Use cases:
1. you need to call passwordReset endPoint where you pass email
2. 


Reference: 

https://docs.pact.io/implementation_guides/javascript
https://codersociety.com/blog/articles/contract-testing-pact#writing-a-pact-consumer-test
https://medium.com/@liran.tal/a-comprehensive-guide-to-contract-testing-apis-in-a-service-oriented-architecture-5695ccf9ac5a
